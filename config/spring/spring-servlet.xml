<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
            http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-3.2.xsd  
           http://www.springframework.org/schema/aop  
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
           http://www.springframework.org/schema/tx   
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
           http://www.springframework.org/schema/mvc   
           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- 1 这里主要配置controller -->
	<!-- <mvc:annotation-driven /> -->
	<!-- 2 在Spring配置文件中配置HandlerMapping、HandlerAdapter -->
	<!-- 注意要配置在前面 -->
	<!--Spring3.1开始的注解 HandlerMapping -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<!--Spring3.1开始的注解 HandlerAdapter -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />

	<!--注解驱动支持 -->
	<!-- <context:annotation-config /> -->

	<!-- 把标记了@Controller注解的类转换为bean -->
	<!-- 因为<context:annotation-config />和 <context:component-scan>同时存在的时候，前者会被忽略。 
		<context:component-scan> 具有<context:annotation-config />功能 -->
	<context:component-scan base-package="com.test.controller" />

	<mvc:default-servlet-handler />

	<!-- Forwards requests to the "/" resource to the "welcome" view -->
	<mvc:view-controller path="/" view-name="welcome" />

	<!-- Configures Handler Interceptors -->
	<mvc:interceptors>
		<!-- Changes the locale when a 'locale' request parameter is sent; e.g. 
			/?locale=de -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	</mvc:interceptors>


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Saves a locale change using a cookie -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

<!-- 	Application Message Bundle
 -->	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="message/messages" />
		<property name="cacheSeconds" value="0" />
	</bean>

	<!-- Configure the multipart resolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views 
		directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>



	<!-- <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/login.html"/>
			<ref bean="securityInteceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<bean id = "securityInteceptor" class="com.test.interceptor.SecurityInterceptor"/> -->

	<!-- 用户的密码加密或解密 <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" 
		/> 用户详细信息管理 : 数据源、用户缓存、启用用户组功能。 <bean id="userDetailsManager" class="org.springframework.security.provisioning.JdbcUserDetailsManager"> 
		<property name="dataSource" ref="dataSource" /> <property name="userCache" 
		ref="userCache" /> </bean> <bean id="userCache" class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache"> 
		<property name="cache" ref="userEhCache" /> </bean> <bean id="userEhCache" 
		class="org.springframework.cache.ehcache.EhCacheFactoryBean"> <property name="cacheName" 
		value="userCache" /> <property name="cacheManager" ref="cacheManager" /> 
		</bean> 缓存用户管理 <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" 
		/> spring security自带的与权限有关的数据读写Jdbc模板 <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
		<property name="dataSource" ref="dataSource" /> </bean> -->


</beans>